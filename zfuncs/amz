#!/usr/bin/env zsh

function amz() {(
    set -e
    set +x

    if [ -n "${ZSH_VERSION}" ]; then
        typeset -A amz_roles
        # this should go into a private profile:
        amz_roles=(
            pp $AWS_PP_ROLE
            ps $AWS_PS_ROLE
            ci $AWS_CI_ROLE
        )
        amz_roles[user]=
    else
        declare -A amz_roles
        # this should go into a private profile:
        # declare -A amz_roles=(
        #     ["short"]="long"
        #     ...
        # )
        amz_roles["user"]=
    fi
    # if set then the content is used as a profile name to inherit from, otherwise
    # assume-role is used directly
    amz_roles_inherit=
    # if 1, force mfa (don't wait for access denied)
    amz_mfa_force=
    amz_roles_default="${amz_roles_default:-user}"

    amz_roles_inherit=root
    amz_mfa_force=1

    args="${@}"
    token=
    role=
    arn="$(
        aws sts get-caller-identity --profile user --output text --query 'Arn'
    )"
    user="${arn##*/}"

    if echo "${1}" | grep -q '^[0-9][0-9][0-9][0-9][0-9][0-9]$'; then
        token="${1}"
        shift
    fi

    if [ -n "${1}" ]; then
        role="${1}"
        shift
    else
        role="${amz_roles_default}"
    fi

    if [ -z "${token}" ]; then
        if echo "${1}" | grep -q '^[0-9][0-9][0-9][0-9][0-9][0-9]$'; then
            token="${1}"
            shift
        fi
    fi

    if [ -n "${role}" ]; then
        if [ -n "${ZSH_VERSION}" ]; then
            if (( $+amz_roles[$role] )); then
                role="${amz_roles[$role]}"
            fi
        elif [ -n "${amz_roles["${role}"]+_}" ]; then
            role="${amz_roles["${role}"]}"
        fi
    fi

    if [ -n "${role}" -a -z "${amz_roles_inherit}" ]; then
        cmd=( aws sts assume-role --role-arn "${role}"
              --role-session-name "awscli-$(whoami)-$(hostname -f)"
              --profile user )
    else
        cmd=( aws sts get-session-token --profile user )
    fi

    if [ -z "${token}" -a "${amz_mfa_force}" = "1" ]; then
        echo -n "MFA: "
        read token
    fi

    if [ -n "${token}" ]; then
        cmd=( "${cmd[@]}" --serial-number "${arn/:user\//:mfa/}"
              --token-code "${token}" )
    fi

    cmd=( "${cmd[@]}"  --output text
         --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' )

    set -o pipefail
    set +e

    target=default
    if [ -n "${role}" -a -n "${amz_roles_inherit}" ]; then
        target="${amz_roles_inherit}"
    fi

    filename=~/.aws/config
    rm -f -- "${filename}.tmp.default"
    touch "${filename}.tmp.default"

    if [ -e "${filename}" ]; then
        (
            pro=
            while read line; do
                if [ "${line:0:1}" = "[" ]; then
                    pro="${line}"
                fi
                if [ "${pro}" = "[profile default]" -o "${pro}" = "[default]" ]; then
                    if [ "${pro}" != "${line}" ]; then
                        key="$(echo "${line%%=*}" | awk '{$1=$1};1')"
                        if [ -n "${key}" -a "${key}" != 'role_arn' -a "${key}" != 'source_profile' ]; then
                            echo "${line}" >>"${filename}.tmp.default"
                        fi
                    fi
                else
                    echo "${line}"
                fi
            done <"${filename}"
        ) >"${filename}.tmp"

        if [ -s "${filename}.tmp.default" ]; then
            echo "[profile default]" >>"${filename}.tmp"
            cat <"${filename}.tmp.default" >>"${filename}.tmp"
        fi
        rm -f -- "${filename}.tmp.default"

        mv -- "${filename}.tmp" "${filename}"
    fi

    tmpfile="$(mktemp)"
    "${cmd[@]}" 2>"${tmpfile}" | (
        read key secret session
        aws configure set --profile "${target}" aws_access_key_id "${key}"
        aws configure set --profile "${target}" aws_secret_access_key "${secret}"
        aws configure set --profile "${target}" aws_session_token "${session}"
    )

    if [ $? -ne 0 -a -z "${token}" ] && \
            grep -q 'AccessDenied' -- "${tmpfile}"; then
        rm -f -- "${tmpfile}"
        echo -n "MFA: "
        read token
        args=( "${token}" "${args[@]}" )
        amz "${args[@]}"
        return $?
    fi

    if [ -n "${role}" -a -n "${amz_roles_inherit}" ]; then
        aws configure set --profile default role_arn "${role}"
        aws configure set --profile default source_profile "${amz_roles_inherit}"
    fi

    cat <"${tmpfile}" >&2
    rm -f -- "${tmpfile}"
    user="$(aws sts get-caller-identity --query 'Arn' --output text)"
    if [ $? -eq 0 ]; then
        echo "Your are now: ${user}"
    fi
)}